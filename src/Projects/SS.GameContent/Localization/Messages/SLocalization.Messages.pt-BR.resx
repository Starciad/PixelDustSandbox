<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Confirm.Simulation.EraseEverything.Description" xml:space="preserve">
    <value>Você está prestes a apagar todo o conteúdo do mundo. Isso inclui elementos, itens e quaisquer outros dados. O mundo será restaurado ao estado vazio. Esta ação é irreversível. Deseja mesmo continuar?</value>
  </data>
  <data name="Confirm.Simulation.EraseEverything.Title" xml:space="preserve">
    <value>Você realmente deseja apagar todo conteúdo do mundo?</value>
  </data>
  <data name="Confirm.Simulation.Exit.Description" xml:space="preserve">
    <value>Se você sair agora, todo o progresso será perdido, a menos que sua criação tenha sido salva. Certifique-se de salvar antes de sair para evitar perder seu trabalho. Você quer continuar?</value>
  </data>
  <data name="Confirm.Simulation.Exit.Title" xml:space="preserve">
    <value>Tem certeza de que deseja sair?</value>
  </data>
  <data name="Confirm.Simulation.Reload.Description" xml:space="preserve">
    <value>Você está prestes a recarregar uma simulação. Isso restaurará o mundo para o estado inicial do arquivo carregado. Se nenhum arquivo foi carregado, o mundo será reiniciado por completo. Esta ação é irreversível. Deseja continuar?</value>
  </data>
  <data name="Confirm.Simulation.Reload.Title" xml:space="preserve">
    <value>Você realmente deseja reiniciar o mundo?</value>
  </data>
  <data name="Confirm.World.Resize.Description" xml:space="preserve">
    <value>Para alterar o tamanho do mundo, todo o conteúdo atual precisará ser apagado. Isso resultará na perda de todo o progresso caso as informações não tenham sido salvas. Certifique-se de salvar antes de continuar. Deseja realmente alterar o tamanho do mundo?</value>
  </data>
  <data name="Confirm.World.Resize.Title" xml:space="preserve">
    <value>Alteração de Tamanho do Mundo - Progresso Será Perdido</value>
  </data>
  <data name="Input.World.Description" xml:space="preserve">
    <value>Insira a descrição que o mundo terá.</value>
  </data>
  <data name="Input.World.Description.Validation.Empty" xml:space="preserve">
    <value>A descrição do mundo não pode estar vazia. Por favor, insira uma descrição para o seu mundo.</value>
  </data>
  <data name="Input.World.Name" xml:space="preserve">
    <value>Insira o nome que o mundo terá.</value>
  </data>
  <data name="Input.World.Name.Validation.Empty" xml:space="preserve">
    <value>O nome do mundo não pode estar vazio. Por favor, insira um nome com pelo menos um caractere.</value>
  </data>
  <data name="NoDescription" xml:space="preserve">
    <value>Nenhuma descrição foi fornecida.</value>
  </data>
  <data name="Settings.RestartRequired" xml:space="preserve">
    <value>Algumas configurações, como a linguagem do jogo, só serão aplicadas após reiniciar o jogo.</value>
  </data>
</root>